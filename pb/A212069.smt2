;; sequence(s): A212069
;; terms: 0 1 2 9 22 41 72 115 170 243 334 443 576 733 914 1125 1366 1637 1944 2287
;; small program: (((x * x) * x) div (1 + 2)) + ((x mod (1 + 2)) mod 2)
;; fast program: loop((((1 - x) div (1 + 2)) * 2) + x, 1, (x * x) * x)
(set-logic UFNIA)
(declare-fun small (Int) Int)
(declare-fun f0 (Int) Int)
(declare-fun g0 () Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (small x) (+ (div (* (* x x) x) (+ 1 2)) (mod (mod x (+ 1 2)) 2)))))
(assert (forall ((x Int)) (= (f0 x) (+ (* (div (- 1 x) (+ 1 2)) 2) x))))
(assert (= g0 1))
(assert (forall ((x Int)) (= (h0 x) (* (* x x) x))))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (forall ((x Int)) (= (v0 x) (u0 g0 (h0 x)))))
(assert (forall ((x Int)) (= (fast x) (v0 x))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
