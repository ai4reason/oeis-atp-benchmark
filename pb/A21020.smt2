;; sequence(s): A21020
;; terms: 0 6 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
;; small program: ((2 + 2) div (1 + x)) * ((2 * (x mod 2)) + x)
;; fast program: ((2 + 2) div (1 + x)) * loop(2 + x, x mod 2, x)
(set-logic UFNIA)
(declare-fun small (Int) Int)
(declare-fun f0 (Int) Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 (Int) Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (small x) (* (div (+ 2 2) (+ 1 x)) (+ (* 2 (mod x 2)) x)))))
(assert (forall ((x Int)) (= (f0 x) (+ 2 x))))
(assert (forall ((x Int)) (= (g0 x) (mod x 2))))
(assert (forall ((x Int)) (= (h0 x) x)))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y (f0 (u0 (- x 1) y))))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) (h0 x)))))
(assert (forall ((x Int)) (= (fast x) (* (div (+ 2 2) (+ 1 x)) (v0 x)))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
