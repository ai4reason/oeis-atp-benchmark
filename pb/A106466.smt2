;; sequence(s): A106466
;; terms: 1 1 2 1 3 2 4 2 5 3 6 3 7 4 8 4 9 5 10 5
;; small program: 1 + ((x div 2) div (1 + (x mod 2)))
;; fast program: 1 + (x div loop(2 + 2, x mod 2, 2))
(set-logic UFNIA)
(declare-fun small (Int) Int)
(declare-fun f0 () Int)
(declare-fun g0 (Int) Int)
(declare-fun h0 () Int)
(declare-fun u0 (Int Int) Int)
(declare-fun v0 (Int) Int)
(declare-fun fast (Int) Int)
(assert (forall ((x Int)) (= (small x) (+ 1 (div (div x 2) (+ 1 (mod x 2)))))))
(assert (= f0 (+ 2 2)))
(assert (forall ((x Int)) (= (g0 x) (mod x 2))))
(assert (= h0 2))
(assert (forall ((x Int) (y Int)) (= (u0 x y) (ite (<= x 0) y f0))))
(assert (forall ((x Int)) (= (v0 x) (u0 (g0 x) h0))))
(assert (forall ((x Int)) (= (fast x) (+ 1 (div x (v0 x))))))
(assert (exists ((c Int)) (and (>= c 0) (not (= (small c) (fast c))))))
(check-sat)
